{
    // Place your nadc workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "subCommand": {
        "scope": "typescript",
        "prefix": "sub",
        "body": [
            "import { ChatInputCommandInteraction, Client } from \"discord.js\";",
            "",
            "module.exports = {",
            "    subCommand: \"${1:root}.${2:sub}\",",
            "    execute(interaction:ChatInputCommandInteraction, client:Client) {",
            "        $0",
            "    }",
            "}"
        ],
        "description": "Sub command snippet"
    },

    "rootCommand": {
        "scope": "typescript",
        "prefix": "root",
        "body": [
            "import { SlashCommandBuilder, ChatInputCommandInteraction, Client } from 'discord.js';",
            "module.exports = {",
            "    name: '${1:commandName}',",
            "    disabled: false,        // is the command disabled?",
            "    hasESub: false,         // does the command has an external sub command?",
            "    initialReply: false,    // does command execute with an initial reply?",
            "    developer: false,       // is command developer only?",
            "    data: new SlashCommandBuilder(),",
            "    execute (interaction:ChatInputCommandInteraction, client:Client) {",
            "        $0",
            "    }",
            "}"
        ],
        "description": "Root command snippet"
    },

    "Detail": {
        "scope": "markdown",
        "prefix": "detail",
        "body": [
            "<details open>",
            "<summary>",
            "$1",
            "</summary>",
            "",
            "$0",
            "",
            "</details>"
        ]
    }
}
